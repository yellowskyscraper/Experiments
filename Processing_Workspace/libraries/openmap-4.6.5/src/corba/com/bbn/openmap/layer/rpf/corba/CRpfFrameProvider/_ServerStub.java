package com.bbn.openmap.layer.rpf.corba.CRpfFrameProvider;


/**
* com/bbn/openmap/layer/rpf/corba/CRpfFrameProvider/_ServerStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from com/bbn/openmap/layer/rpf/corba/CorbaRpfFrameProvider.idl
* Wednesday, March 4, 2009 5:10:37 PM EST
*/


//------------------------------------------------------------
public class _ServerStub extends org.omg.CORBA.portable.ObjectImpl implements com.bbn.openmap.layer.rpf.corba.CRpfFrameProvider.Server
{

  public void setViewAttributes (com.bbn.openmap.layer.rpf.corba.CRpfFrameProvider.CRFPViewAttributes va, String uniqueID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setViewAttributes", true);
                com.bbn.openmap.layer.rpf.corba.CRpfFrameProvider.CRFPViewAttributesHelper.write ($out, va);
                $out.write_string (uniqueID);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                setViewAttributes (va, uniqueID        );
            } finally {
                _releaseReply ($in);
            }
  } // setViewAttributes

  public com.bbn.openmap.layer.rpf.corba.CRpfFrameProvider.CRFPCoverageBox[] getCoverage (float ullat, float ullon, float lrlat, float lrlon, com.bbn.openmap.layer.rpf.corba.CRpfFrameProvider.CRFPCADRGProjection p, String uniqueID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getCoverage", true);
                $out.write_float (ullat);
                $out.write_float (ullon);
                $out.write_float (lrlat);
                $out.write_float (lrlon);
                com.bbn.openmap.layer.rpf.corba.CRpfFrameProvider.CRFPCADRGProjectionHelper.write ($out, p);
                $out.write_string (uniqueID);
                $in = _invoke ($out);
                com.bbn.openmap.layer.rpf.corba.CRpfFrameProvider.CRFPCoverageBox $result[] = com.bbn.openmap.layer.rpf.corba.CRpfFrameProvider.CRFPCoverageBoxSeqHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getCoverage (ullat, ullon, lrlat, lrlon, p, uniqueID        );
            } finally {
                _releaseReply ($in);
            }
  } // getCoverage

  public com.bbn.openmap.layer.rpf.corba.CRpfFrameProvider.CRFPCoverageBox[] getCatalogCoverage (float ullat, float ullon, float lrlat, float lrlon, com.bbn.openmap.layer.rpf.corba.CRpfFrameProvider.CRFPCADRGProjection p, String chartSeriesCode, String uniqueID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getCatalogCoverage", true);
                $out.write_float (ullat);
                $out.write_float (ullon);
                $out.write_float (lrlat);
                $out.write_float (lrlon);
                com.bbn.openmap.layer.rpf.corba.CRpfFrameProvider.CRFPCADRGProjectionHelper.write ($out, p);
                $out.write_string (chartSeriesCode);
                $out.write_string (uniqueID);
                $in = _invoke ($out);
                com.bbn.openmap.layer.rpf.corba.CRpfFrameProvider.CRFPCoverageBox $result[] = com.bbn.openmap.layer.rpf.corba.CRpfFrameProvider.CRFPCoverageBoxSeqHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getCatalogCoverage (ullat, ullon, lrlat, lrlon, p, chartSeriesCode, uniqueID        );
            } finally {
                _releaseReply ($in);
            }
  } // getCatalogCoverage

  public byte[] getSubframeData (short tocNumber, short entryNumber, short x, short y, float jpegQuality, String uniqueID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getSubframeData", true);
                $out.write_ushort (tocNumber);
                $out.write_ushort (entryNumber);
                $out.write_short (x);
                $out.write_short (y);
                $out.write_float (jpegQuality);
                $out.write_string (uniqueID);
                $in = _invoke ($out);
                byte $result[] = com.bbn.openmap.layer.rpf.corba.CRpfFrameProvider.dataHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getSubframeData (tocNumber, entryNumber, x, y, jpegQuality, uniqueID        );
            } finally {
                _releaseReply ($in);
            }
  } // getSubframeData

  public com.bbn.openmap.layer.rpf.corba.CRpfFrameProvider.RawImage getRawSubframeData (short tocNumber, short entryNumber, short x, short y, String uniqueID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getRawSubframeData", true);
                $out.write_ushort (tocNumber);
                $out.write_ushort (entryNumber);
                $out.write_short (x);
                $out.write_short (y);
                $out.write_string (uniqueID);
                $in = _invoke ($out);
                com.bbn.openmap.layer.rpf.corba.CRpfFrameProvider.RawImage $result = com.bbn.openmap.layer.rpf.corba.CRpfFrameProvider.RawImageHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getRawSubframeData (tocNumber, entryNumber, x, y, uniqueID        );
            } finally {
                _releaseReply ($in);
            }
  } // getRawSubframeData

  public String getSubframeAttributes (short tocNumber, short entryNumber, short x, short y, String uniqueID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getSubframeAttributes", true);
                $out.write_ushort (tocNumber);
                $out.write_ushort (entryNumber);
                $out.write_short (x);
                $out.write_short (y);
                $out.write_string (uniqueID);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getSubframeAttributes (tocNumber, entryNumber, x, y, uniqueID        );
            } finally {
                _releaseReply ($in);
            }
  } // getSubframeAttributes

  public void signoff (String uniqueID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("signoff", false);
                $out.write_string (uniqueID);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                signoff (uniqueID        );
            } finally {
                _releaseReply ($in);
            }
  } // signoff

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:CRpfFrameProvider/Server:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _ServerStub
