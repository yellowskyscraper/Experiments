/** *	CLASS : BaseDocument *  VERSION : 1.00  *  UPDATED : 7/23/2008 *  ACTIONSCRIPT VERSION : 3.0  *  AUTHOR : Stephen Braitsch : stephen@ordinarykids.com**/package com.ordinarykids.core {	import flash.ui.ContextMenu;    import flash.ui.ContextMenuItem;	import flash.events.Event;    import flash.events.ContextMenuEvent;	import flash.net.URLRequest; 	import flash.net.navigateToURL;		import flash.display.StageAlign;	import flash.display.StageScaleMode;				import com.ordinarykids.net.XMLRequest;	import com.ordinarykids.events.XMLRequestEvent;		/** 	 * Base class from which all Flash Applications should extend	 */		public class BaseDocument extends BaseSystem {			// path to the global xml config file, can be overridden with an html flashvar //			private static var _configurl		:String = 'xml/config.xml';		private static var _configxml 		:XML				private static var _flashvars		:Object = {};			private static var _menu			:ContextMenu;			private static var _cmis			:Array = []; // array of context menu items and actions				public function BaseDocument() 		{			addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);		}				private function onAddedToStage(e:Event):void		{		// set basic stage properties //	            stage.align = StageAlign.TOP_LEFT;            stage.scaleMode = StageScaleMode.NO_SCALE;                     // get any html flash vars //        			for (var n in loaderInfo.parameters)			{				_flashvars[n] = loaderInfo.parameters[n];			}				// check for an xml confiq file //		//			var _request = new XMLRequest(_configurl);        	var _request = new XMLRequest(_flashvars.configurl || _configurl);		//		_request.debug = false;        		_request.addEventListener(XMLRequestEvent.COMPLETE, onRequestComplete);				_request.load();					}		 //- PUBLIC GETTERS ----------------------------------------------------------------------						public function get vars():Object		{		  	return _flashvars;		}    					public function get config():XML		{			return _configxml;		}		 //- LISTEN FOR THE XML LOAD COMPLETE EVENT ----------------------------------------------------------------------				private function onRequestComplete(evt:XMLRequestEvent):void		{			_configxml = evt.data as XML;			dispatchEvent(new XMLRequestEvent(XMLRequestEvent.COMPLETE, _configxml));		}		 //- CUSTOMIZE CONTEXT MENU ----------------------------------------------------------------------			protected function setContextMenu($txt:String, $link:String = ''):void		{			if (!_menu) {				_menu = new ContextMenu();				_menu.hideBuiltInItems();				this.contextMenu = _menu;			}			var cmi:ContextMenuItem = new ContextMenuItem($txt);							cmi.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, onContextMenuSelection);			_cmis.push({txt:$txt, link:$link});			_menu.customItems.push(cmi);		}				private function onContextMenuSelection(evt:ContextMenuEvent):void		{			for (var i:int = 0; i < _cmis.length; i++){				if (_cmis[i].txt == evt.target.caption){					var link = _cmis[i].link; break; 				}			}			if (link) navigateToURL(new URLRequest(link));		}		}	}