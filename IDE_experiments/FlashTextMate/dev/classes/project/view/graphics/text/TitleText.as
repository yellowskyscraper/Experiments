package project.view.graphics.text {	import flash.display.Sprite;	import flash.text.Font;	import flash.text.TextFormat;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.text.TextFieldType;	import flash.text.AntiAliasType;		import flash.events.Event;	import flash.events.MouseEvent;////////////////////////////////////////////////////////////////////////////////////////////////////////////|////////////////////////////////////////////////////////////////////////////////////////////////////////////|////////////////////////////////////////////////////////////////////////////////////////////////////////////|////////////////////////////////////////////////////////////////////////////////////////////////////////////| 	public class TitleText extends Sprite {	    	    private var _gui            :Object	    private var _title          :String;	    private var _font           :Font;		private var _format         :TextFormat;		private var _field          :TextField;				public function TitleText($gui:Object = null)		{   		    _gui = $gui;		    		    _title                  = (_gui.text) ? _gui.text : "Title Secondary Text";		    		    if(_gui.fontstylebold) _font = new CenturyGothicBold();		    else _font = new CenturyGothicBoldItalic();		    		    _format                 = new TextFormat();		    _format.font            = _font.fontName;			_format.size            = (_gui.fontsize) ? _gui.fontsize : 12;			_format.color           = (_gui.fontcolor) ? _gui.fontcolor : 0x342727;    						_field                  = new TextField();		    _field.x                = 0;			_field.y                = 0;			_field.width            = (_gui.w) ? _gui.w : 200; //| Width			_field.height           = 20;			_field.embedFonts       = true;			_field.multiline        = (_gui.multiwrap) ? true : false;			_field.wordWrap         = (_gui.multiwrap) ? true : false;			_field.selectable       = false;			_field.border           = false;			_field.borderColor      = 0xFFFFFF;			_field.htmlText         = (_gui.uppercase) ? _title.toUpperCase() : _title;			_field.autoSize         = (_gui.centered) ? TextFieldAutoSize.CENTER : TextFieldAutoSize.LEFT;			_field.type             = TextFieldType.DYNAMIC;			_field.antiAliasType    = AntiAliasType.ADVANCED;			_field.setTextFormat(_format);						addChild(_field);		}		public function set newtext($newtext:String):void		{		    _title = $newtext;			_field.htmlText = _title;			_field.setTextFormat(_format);		}				public function get getName():String		{		    return _title;		}								public function on():void		{			_format.color = 0x15D8C8;			_field.setTextFormat(_format);		}				public function over():void		{			_format.underline = true;			_field.setTextFormat(_format);		}				public function out():void		{			_format.underline = false;			_field.setTextFormat(_format);		}				public function off():void		{			_format.color = (_gui.fontcolor) ? _gui.fontcolor : 0x342727;			_field.setTextFormat(_format);		}			}}