package project.view.graphics.backgrounds {	import flash.display.Sprite;	import flash.events.MouseEvent;		import flash.events.Event;    import flash.display.GradientType;    import flash.display.SpreadMethod;    import flash.display.InterpolationMethod;    import flash.geom.Matrix;    import flash.filters.BitmapFilter;    import flash.filters.BitmapFilterQuality;    import flash.filters.BlurFilter;                            	import project.events.AppEvent;    	import gs.TweenLite;	import gs.easing.Expo;////////////////////////////////////////////////////////////////////////////////////////////////////////////|////////////////////////////////////////////////////////////////////////////////////////////////////////////|////////////////////////////////////////////////////////////////////////////////////////////////////////////|////////////////////////////////////////////////////////////////////////////////////////////////////////////| //| Blank Class	public class RadialGradient extends Sprite {	    	    private var backgroundGradient  :Sprite;	    private var colors              :Array;        private var alphas              :Array;        private var ratios              :Array;        private var matrix              :Matrix;        private var focalPoint          :Number = .5;        		public function RadialGradient()		{		    backgroundGradient = new Sprite();		    backgroundGradient.alpha = 0.0;            //colors = new Array (0xF9F7F2, 0xA5ACA4); //| OG (Light, Dark)            //colors = new Array (0xE8E6E1, 0x949B93);            colors = new Array (0xF9F7F2, 0xD9D8D1);            alphas = new Array (1, 1);            ratios = new Array (127, 255);            matrix = new Matrix();		}//////////////////////////////////////////////////////////////////////////////////////////|//////////////////////////////////////////////////////////////////////////////////////////|//| Enter & Exit Conditionals and Control        public function enter($w:int, $h:int):void        {			position($w, $h);			TweenLite.to(backgroundGradient, 2, {alpha:1, ease:Expo.easeOut, onComplete:function(){            	dispatchEvent(new AppEvent(AppEvent.BG_DONE));			}});        }////////////////////////////////////////////////////////////////////////////////////////////////////////////|////////////////////////////////////////////////////////////////////////////////////////////////////////////| //| On Stage Resize: Positioning   		   		public function position($w:int, $h:int):void		{		    var w:int = $w;    		var h:int = $h;    		//var w:int = $w + 100;        	//var h:int = $h + 100;		    		//| Gradient Render		//| Fudged the numbers to pull the gradients edges back.            matrix.createGradientBox(w+600, h+500, (3 * Math.PI / 2), -300, -100);                        backgroundGradient.graphics.clear();            backgroundGradient.graphics.beginGradientFill(GradientType.RADIAL, colors, alphas, ratios, matrix, SpreadMethod.PAD, InterpolationMethod.RGB, focalPoint);            backgroundGradient.graphics.drawRect(-50, -50, w+100, h+100);            backgroundGradient.graphics.endFill();            backgroundGradient.x = 0;            backgroundGradient.y = 0;                        var blur:BitmapFilter = new BlurFilter(30, 30, BitmapFilterQuality.HIGH);            var myFilters:Array = new Array();                myFilters.push(blur);            backgroundGradient.filters = myFilters;                        addChild(backgroundGradient);		}		}}